import "auth"
model Role {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  isActive        Boolean           @default(true)

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  createdBy       String?
  updatedBy       String?

  Permission2Role Permission2Role[]
  User            User[]

  @@map("role")
}

model Permission {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  module          String
  isActive        Boolean           @default(true)

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  Permission2Role Permission2Role[]
  Permission2User Permission2User[]

  @@map("permission")
}

model Permission2Role {
  id           Int        @id @default(autoincrement())
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       Int
  isActive     Boolean    @default(true)

  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  createdBy    String?
  updatedBy    String?

  @@unique([permissionId, roleId])
  @@map("permission_2_role")
}

model Permission2User {
  id           Int        @id @default(autoincrement())
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  isActive     Boolean    @default(true)

  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  createdBy    String?
  updatedBy    String?

  @@unique([permissionId, userId])
  @@map("permission_2_user")
}
