import "base"
import "rbac"

model User extends BaseModel {
  email                       String            @unique
  password                    String?
  isActive                    Boolean           @default(false)
  activationToken             String?           @unique
  activationTokenExpiresAt    DateTime?
  resetPasswordToken          String?           @unique
  resetPasswordTokenExpiresAt DateTime?
  lastLogin                   DateTime?
  hasTwoFA                    Boolean           @default(false)
  twoFAPhoneNumber            String?
  twoFAPPhoneVerified         Boolean           @default(false)

  role                        Role?             @relation(fields: [roleId], references: [id])
  roleId                      Int?

  activatedAt                 DateTime?
  activatedBy                 String?
  deactivatedAt               DateTime?
  deactivatedBy               String?

  Otp                         Otp[]
  Permission2User             Permission2User[]

  @@allow('all', auth() == this || auth().roleId == 1)

  @@map("user")
}

model ApiKey extends BaseModel {
  name        String   @unique
  description String?
  key         String   @unique
  isActive    Boolean  @default(true)
  expiresAt   DateTime


  @@map("api_key")
}

enum OtpUseCaseEnum {
  LOGIN
  D2FA
  PHV
}

model Otp extends BaseModel {
  user      User           @relation(fields: [userId], references: [id])
  userId    Int
  code      String
  use       OtpUseCaseEnum

  expiresAt DateTime

  @@map("otp")
}
